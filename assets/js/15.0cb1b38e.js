(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{552:function(s,t,a){"use strict";a.r(t);var e=a(5),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",[s._v("前面几篇文章已经给大家介绍了 Docker 的基本概念，相信大家也会使用 Docker 运行自己想要的容器了。但是只有学会制作镜像，才能将 Docker 应用到我们的项目中去。下面我们就来学习如何使用 Dockerfile 来制作镜像。")]),s._v(" "),a("p",[s._v("Dockerfile 是一个文本文件，里面的内容是一条条的指令，每一条指令将会构建一层，因此每条指令的内容就是在描述该层应当如何创建。")]),s._v(" "),a("h2",{attrs:{id:"编写-dockerfile"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编写-dockerfile"}},[s._v("#")]),s._v(" 编写 Dockerfile")]),s._v(" "),a("p",[s._v("接下来以 nginx 镜像为例，定制一个简单的镜像，首先创建一个目录 mynginx，进入目录再创建一个文本文件，名字为 Dockerfile。")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" mynginx\n$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" mynginx\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("touch")]),s._v(" Dockerfile\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("把以下内容写到 Dockerfile 中")]),s._v(" "),a("div",{staticClass:"language-docker line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-docker"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" nginx\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" echo "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'<h1>Hello, Docker!<h1>'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v(" /usr/share/nginx/html/index.html\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("其中 "),a("code",[s._v("FROM")]),s._v(" 用来指定基础镜像，上面的例子是以 nginx 为基础镜像。")]),s._v(" "),a("p",[a("code",[s._v("RUN")]),s._v(" 命令则表示执行一个 shell 命令，将文本写进 "),a("code",[s._v("index.html")]),s._v("。")]),s._v(" "),a("h2",{attrs:{id:"构建命令详解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#构建命令详解"}},[s._v("#")]),s._v(" 构建命令详解")]),s._v(" "),a("p",[s._v("编写完 Dockerfile 之后就可以用来构建镜像。构建 docker 镜像的命令如下：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("$ docker build "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("OPTIONS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("PATH")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" URL "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" -\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("选项的说明如下：")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("OPTIONS")]),s._v(" "),a("th",[s._v("说明")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("--build-arg=[]")]),s._v(" "),a("td",[s._v("设置镜像创建时的变量")])]),s._v(" "),a("tr",[a("td",[s._v("--cpu-shares")]),s._v(" "),a("td",[s._v("设置 CPU 使用权重")])]),s._v(" "),a("tr",[a("td",[s._v("--cpu-period")]),s._v(" "),a("td",[s._v("限制 CPU CFS 周期")])]),s._v(" "),a("tr",[a("td",[s._v("--cpu-quota")]),s._v(" "),a("td",[s._v("限制 CPU CFS 配额")])]),s._v(" "),a("tr",[a("td",[s._v("--cpuset-cpus")]),s._v(" "),a("td",[s._v("指定使用的 CPU")])]),s._v(" "),a("tr",[a("td",[s._v("--cpuset-mems")]),s._v(" "),a("td",[s._v("指定使用的内存 id")])]),s._v(" "),a("tr",[a("td",[s._v("--disable-content-trust")]),s._v(" "),a("td",[s._v("忽略检验，默认开启")])]),s._v(" "),a("tr",[a("td",[s._v("-f")]),s._v(" "),a("td",[s._v("指定要使用的 Dockerfile 路径")])]),s._v(" "),a("tr",[a("td",[s._v("--force-rm")]),s._v(" "),a("td",[s._v("设置镜像过程中删除中间容器")])]),s._v(" "),a("tr",[a("td",[s._v("--isolation")]),s._v(" "),a("td",[s._v("使用容器隔离技术")])]),s._v(" "),a("tr",[a("td",[s._v("--label=[]")]),s._v(" "),a("td",[s._v("设置镜像使用的元数据")])]),s._v(" "),a("tr",[a("td",[s._v("-m")]),s._v(" "),a("td",[s._v("设置内存最大最")])]),s._v(" "),a("tr",[a("td",[s._v("--memory-swap")]),s._v(" "),a("td",[s._v("设置 Swap 的最大值为内存 + swap，'-1' 表示不限 swap")])]),s._v(" "),a("tr",[a("td",[s._v("--no-cache")]),s._v(" "),a("td",[s._v("创建镜像的过程中不适用缓存")])]),s._v(" "),a("tr",[a("td",[s._v("--pull")]),s._v(" "),a("td",[s._v("尝试更新镜像的新版本")])]),s._v(" "),a("tr",[a("td",[s._v("--quiet,-q")]),s._v(" "),a("td",[s._v("安静模式，成功后只输出镜像 ID")])]),s._v(" "),a("tr",[a("td",[s._v("--rm")]),s._v(" "),a("td",[s._v("设置镜像成功后删除中间容器")])]),s._v(" "),a("tr",[a("td",[s._v("--shm-size")]),s._v(" "),a("td",[s._v("设置 /dev/shm 的大小，默认值是 64M")])]),s._v(" "),a("tr",[a("td",[s._v("--ulimit")]),s._v(" "),a("td",[s._v("Ulimit 配置")])]),s._v(" "),a("tr",[a("td",[s._v("--tag,-t")]),s._v(" "),a("td",[s._v("镜像的名字及标签，通常 name:tag 或者 name 格式，可以在一次构建中为一个镜像设置多个标签")])]),s._v(" "),a("tr",[a("td",[s._v("--network")]),s._v(" "),a("td",[s._v("默认 default。在构建期间设置 RUN 指令的网络模式")])])])]),s._v(" "),a("p",[s._v("下面举几个例子，说明选项的用法")]),s._v(" "),a("ul",[a("li",[s._v("使用当前目录的 Dockerfile 创建镜像，标签为 "),a("code",[s._v("fedevelop/example:v1")])])]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("$ docker build -t fedevelop/example:v1 "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[s._v("使用 URL github.com/ad-feiben/qc-remind 的 Dockerfile 创建镜像")])]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("$ docker build github.com/ad-feiben/qc-remind\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[s._v("通过 -f Dockerfile 文件的位置")])]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("$ docker build -f /path/to/a/Dockerfile "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("回到 "),a("code",[s._v("mynginx")]),s._v(" 目录中执行下面的命令")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("$ docker build -t nginx:v2 "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\nSending build context to Docker daemon  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(".048kB\nStep "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/2 "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" FROM nginx\n ---"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" f949e7d76d63\nStep "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("/2 "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" RUN "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'<h1>Hello, Docker!</h1>'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /usr/share/nginx/html/index.html\n ---"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" Running "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" 88dc64292fa7\nRemoving intermediate container 88dc64292fa7\n ---"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" 5d1e253d361c\nSuccessfully built 5d1e253d361c\nSuccessfully tagged nginx:v2\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[s._v("注意不要漏了最后的 "),a("code",[s._v(".")]),s._v("，"),a("code",[s._v(".")]),s._v(" 代表将当前目录设置为镜像构建上下文（Context）。")]),s._v(" "),a("p",[s._v("例如 Dockerfile 的内容如下：")]),s._v(" "),a("div",{staticClass:"language-docker line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-docker"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" ./requirements.txt /app/\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("em",[s._v("意思为复制上下文目录下的 "),a("code",[s._v("requirements.txt")]),s._v("，与 Dockerfile、执行 "),a("code",[s._v("docker build")]),s._v(" 所在的目录无关。")])]),s._v(" "),a("p",[s._v("构建完成后，我们可以通过 "),a("code",[s._v("Docker images")]),s._v(" 查看我们构建的镜像")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("$ docker images\ndocker images\nREPOSITORY              TAG                 IMAGE ID            CREATED              SIZE\nnginx                   v2                  5d1e253d361c        About a minute ago   126MB\nnginx                   latest              f949e7d76d63        "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" weeks ago          126MB\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("接下来用我们定制的镜像来启动一个容器看看，其中 "),a("code",[s._v("5d1e253d361c")]),s._v(" 替换为你的镜像 id")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("$ docker run -it -p "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v(":80 5d1e253d361c\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("浏览器打开 http://localhost/ 可以看到页面显示的是 "),a("code",[s._v("Hello, Docker!")]),s._v("，说明我们的 Dockerfile 中的命令生效了。")]),s._v(" "),a("h2",{attrs:{id:"指令详解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#指令详解"}},[s._v("#")]),s._v(" 指令详解")]),s._v(" "),a("p",[a("strong",[s._v("FROM 指定基础镜像")])]),s._v(" "),a("p",[a("em",[a("code",[s._v("FROM")]),s._v(" 是用来指定基础镜像，这个命令是 Dockerfile 中必备的指令，并且必须是第一条指令。")])]),s._v(" "),a("p",[s._v("假如不需要基础镜像，可以使用空白镜像 "),a("code",[s._v("scratch")]),s._v(" 作为基础镜像。"),a("code",[s._v("scratch")]),s._v(" 这个镜像是虚拟的，实际并不存在。")]),s._v(" "),a("div",{staticClass:"language-docker line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-docker"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" scratch\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("...")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[a("strong",[s._v("RUN 执行命令")])]),s._v(" "),a("p",[s._v("从上面的例子中可以看到 "),a("code",[s._v("RUN")]),s._v(" 可以执行一个 "),a("code",[s._v("shell")]),s._v(" 命令，除了此之外还有另一种格式。")]),s._v(" "),a("p",[a("code",[s._v("exec")]),s._v(" 格式："),a("code",[s._v('RUN ["可执行文件", "参数"]')]),s._v("。")]),s._v(" "),a("p",[s._v("我们在编写 Dockerfile 的时候需要尽可能将指令链接起来，因为 Dockerfile 中的每一条指令都会建立一层，如果建立太多层，不仅会使得镜像非常臃肿，也会增加构建时间。")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 错误示范")]),s._v("\nFROM debian:stretch\n\nRUN "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" update\nRUN "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -y gcc libc6-dev "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("make")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v("\nRUN "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" -O redis.tar.gz "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"http://download.redis.io/releases/redis-5.0.3.tar.gz"')]),s._v("\nRUN "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p /usr/src/redis\nRUN "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" -xzf redis.tar.gz -C /usr/src/redis --strip-components"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\nRUN "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("make")]),s._v(" -C /usr/src/redis\nRUN "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("make")]),s._v(" -C /usr/src/redis "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[s._v("正确的写法如下，使用 "),a("code",[s._v("&&")]),s._v(" 将多条命令合并为一条，并且删除不必要的文件、清理 "),a("code",[s._v("apt")]),s._v(" 缓存等，尽量保持容器干净。如果没有做清理工作的话，这些冗余的文件等将会带到下一层，并且会一直跟随镜像。")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("FROM debian:stretch\n\nRUN "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("buildDeps")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'gcc libc6-dev make wget'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" update "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -y "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$buildDeps")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" -O redis.tar.gz "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"http://download.redis.io/releases/redis-5.0.3.tar.gz"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p /usr/src/redis "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" -xzf redis.tar.gz -C /usr/src/redis --strip-components"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("make")]),s._v(" -C /usr/src/redis "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("make")]),s._v(" -C /usr/src/redis "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" -rf /var/lib/apt/lists/* "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" redis.tar.gz "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" -r /usr/src/redis "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" purge -y --auto-remove "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$buildDeps")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("p",[a("strong",[s._v("WORKDIR 指定工作目录")])]),s._v(" "),a("p",[a("code",[s._v("WORKDIR")]),s._v(" 的格式为 "),a("code",[s._v("WORKDIR <工作目录路径>")])]),s._v(" "),a("p",[s._v("当使用 "),a("code",[s._v("WORKDIR")]),s._v(" 指定工作路径后，以后的每一层的当前目录都会被改为工作目录，如果目录不存在，"),a("code",[s._v("WORKDIR")]),s._v(" 会帮助我们创建目录。")]),s._v(" "),a("p",[s._v("如果需要改变以后各层的工作目录的位置，只需要再使用 WORKDIR 指令即可。")]),s._v(" "),a("p",[a("strong",[s._v("COPY 复制文件")])]),s._v(" "),a("p",[a("code",[s._v("COPY")]),s._v(" 的格式为 "),a("code",[s._v("COPY [--chown=<user>:<group>] <源路径>... <目标路径>")])]),s._v(" "),a("p",[a("code",[s._v("源路径")]),s._v("可以是多个，也可以使用通配符，例如下面这样：")]),s._v(" "),a("div",{staticClass:"language-docker line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-docker"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" hom* /mydir/\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" hom"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("?")]),s._v(".txt /mydir/\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[a("code",[s._v("目标路径")]),s._v("可以是容器内的绝对路径，也可以相对工作目录的相对路径。目标路径不需要我们创建，如果目标路径不存在会在复制文件前先行创建缺失的目录。")]),s._v(" "),a("p",[s._v("使用 "),a("code",[s._v("COPY")]),s._v(" 复制文件时，会保留文件的元数据，比如读写权限，文件变更的时间等。如果需要修改文件的所属用户及所属组，可以通过添加 "),a("code",[s._v("--chown=<user>:<group>")]),s._v(" 选项进行修改。")]),s._v(" "),a("p",[a("strong",[s._v("CMD 容器启动命令")])]),s._v(" "),a("p",[s._v("shell 格式为 "),a("code",[s._v("CMD <命令>")])]),s._v(" "),a("p",[s._v("exec 格式为 "),a("code",[s._v('CND ["可执行文件", "参数1", "参数2"]')])]),s._v(" "),a("p",[s._v("使用 shell 格式的话，实际的命令会被包装成 "),a("code",[s._v("sh -c")]),s._v(" 的形式进行执行，比如：")]),s._v(" "),a("p",[a("code",[s._v("CMD echo $HOME")]),s._v(" 在实际执行中，将会变成 "),a("code",[s._v('CMD [ "sh", "-c", "echo $HOME" ]')])]),s._v(" "),a("p",[a("em",[s._v("所以在使用 "),a("code",[s._v("CMD")]),s._v(" 的时候一般推荐使用 "),a("code",[s._v("exec")]),s._v(" 的格式，需要注意的是 "),a("code",[s._v("exec")]),s._v(" 的格式会被解析成 "),a("code",[s._v("JSON")]),s._v(" 数组，所以只能够使用双引号，而不能使用单引号。")])]),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("Dockerfile 的指令不止这么几个，感兴趣的小伙伴可以到 https://yeasy.gitbooks.io/docker_practice/image/dockerfile/ 自行查看。")]),s._v(" "),a("h2",{attrs:{id:"示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[s._v("#")]),s._v(" 示例")]),s._v(" "),a("p",[s._v("下面将通过我的 Python 项目来演示，怎么编写一个 Dockerfile，文件地址在 https://raw.githubusercontent.com/AD-feiben/qc-remind/master/Dockerfile")]),s._v(" "),a("p",[s._v("文件的内容如下:")]),s._v(" "),a("div",{staticClass:"language-docker line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-docker"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定基础镜像")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" python"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("3.7.4\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置镜像作者")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("MAINTAINER")]),s._v(" feiben <feiben.dev@gmail.com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置工作目录")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WORKDIR")]),s._v(" /app\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 复制上下文的文件到容器的 app 目录下")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 不需要复制到镜像的文件可以使用 .dockerignore 进行忽略")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" . /app\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 执行下面命令，同步时区，安装依赖")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime \\\n    && echo "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Asia/Shanghai'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),s._v("/etc/timezone \\\n    && pip install "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("r requirements.txt\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动容器")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"python"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"main.py"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"--log-file-prefix"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"qc-remind.log"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br")])]),a("p",[s._v("当我们的代码编写完成后，就可以执行 "),a("code",[s._v("docker build -t <name>:<tag> .")]),s._v(" 将代码打包成一个 Docker 镜像，再 push 到镜像仓库中。")]),s._v(" "),a("h2",{attrs:{id:"部署"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#部署"}},[s._v("#")]),s._v(" 部署")]),s._v(" "),a("p",[s._v("按照传统的方式部署项目，通常需要在服务器安装一套运行环境，而且常常会遇到环境不一致导致本地开发没问题，一到线上部署就出现各种问题的情况。并且一旦服务器到期，迁移的工作量也是十分巨大。")]),s._v(" "),a("p",[s._v("而使用 Docker，我们只需要在服务器安装一个 Docker 环境即可，部署项目只需要执行 "),a("code",[s._v("docker run xxx")]),s._v("。不仅减少了安装环境的时间，也保证了环境的一致性。")]),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("如果你喜欢我的文章，希望可以关注一下我的公众号【前端develop】")]),s._v(" "),a("p",[a("img",{attrs:{src:"/imgs/qrcode.png",alt:"前端develop"}})])])}),[],!1,null,null,null);t.default=n.exports}}]);